import pandas as pd
pd.set_option("display.max_columns", None)
pd.set_option("display.float_format", lambda x: '%.2f' % x)
df = pd.read_excel('C:/Users/sfkul/Downloads/gezinomi_tantm-230304-111358/gezinomi_tan─▒t─▒m/miuul_gezinomi.xlsx')
print(df.head())

#VARIABLE
#SaleId: Satıs id
#SaleDate : Satıs Tarihi
#CheckInDate: Müşterinin otele  giriş tarihi
#Price: Satış için ödenen fiyat
#ConceptName:Otel konsept bilgisi
#SaleCityName: Otelin bulunduğu şehir bilgisi
#CInDay:Müşterinin otele giriş günü
#SaleCheckInDayDiff: Check in ile giriş tarihi gün farkı
#Season:Otele giriş tarihindeki sezon bilgisi

print(df.shape)
print(df.info())

#How many unique cities are there? What are their frequencies?

print(df["SaleCityName"].nunique())
print(df["SaleCityName"].value_counts())

#How many unique Concept are there?

print(df["ConceptName"].nunique())

#How many sales have been made for each concept?

print(df["ConceptName"].value_counts())

#How much total revenue has been generated from sales by city?

df.groupby("SaleCityName").agg({"Price": "sum"})

#How much revenue has been generated by each type of concept?

df.groupby("ConceptName").agg({"Price": "sum"})

#What are the average prices by city?

df.groupby(by=["SaleCityName"]).agg({"Price": "mean"})

#What are the average prices by concept

df.groupby(by=["ConceptName"]).agg({"Price": "mean"})

#What are the average prices by city-concept breakdown?

df.groupby(by=["SaleCityName", 'ConceptName']).agg({"Price": "mean"})

#How to convert the variable 'SaleCheckInDayDiff' into a categorical variable?



bins = [-1, 7, 30, 90, float("inf")]
labels = ["Last Minuters", "Potential Planners", "Early Bookers", "Very Early Bookers"]

df["EB_Score"] = pd.cut(df["SaleCheckInDayDiff"], bins=bins, labels=labels)
df.head(50).to_excel("eb_score.xlsx", index=False)

#Analyze the average paid amount and transaction count by City-Concept-EB Score, City-Concept-Season, and City-Concept-CInDay breakdowns

df.groupby(by=["SaleCityName", 'ConceptName', "EB_Score"]).agg({"Price": "mean"})
df.groupby(by=["SaleCityName", 'ConceptName', "Seasons"]).agg({"Price": "mean"})
df.groupby(by=["SaleCityName", 'ConceptName', "CInDay"]).agg({"Price": "mean"})

#City-Concept-Season kırılımının çıktısını PRICE'a göre sıralayınız

agg_df = df.groupby(by=["SaleCityName", 'ConceptName', "Seasons"]).agg({"Price": "mean"})
agg_df.head(20)

#Indekste yer alan isimleri değişken ismine çeviriniz.

agg_df.reset_index(inplace=True)
agg_df.head()

#Yeni seviye tabanlı müşterileri (persona) tanımlayınız.

agg_df['sales_level_based'] = agg_df[["SaleCityName", "ConceptName", "Seasons"]].agg(lambda x: '_'.join(x).upper(), axis=1)

#Yeni müşterileri (personaları) segmentlere ayırınız.

agg_df["SEGMENT"] = pd.qcut(agg_df["Price"], 4, labels=["D", "C", "B", "A"])
agg_df.head(30)
agg_df.groupby("SEGMENT").agg({"Price": ["mean", "max", "sum"]})

# Yeni gelen müşterileri sınıflandırıp, ne kadar gelir getirebileceklerini tahmin ediniz.
#• Antalya’da herşey dahil ve yüksek sezonda tatil yapmak isteyen bir kişinin ortalama ne kadar gelir kazandırması beklenir?


new_user = "ANTALYA_HERŞEY_DAHIL_HIGH"
agg_df[agg_df["sales_level_based"] == new_user]